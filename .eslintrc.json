{
  "env": {
    "browser": true,
    "es2020": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": ["react", "@typescript-eslint"],
  "rules": {
    "indent": ["error", 2],
    "quotes": ["error", "single"],
    "semi": ["error", "never"],
    "max-len": ["warn", 80],
    "no-use-before-define": ["error"],
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/no-empty-interface": 1,
    "@typescript-eslint/no-explicit-any": 1,
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".tsx"]
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "{}": {
            "message": "Use object instead",
            "fixWith": "object"
          }
        }
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": 0,
        "@typescript-eslint/ban-types": [
          0,
          {
            "types": {
              "{}": {
                "message": "Use object instead",
                "fixWith": "object"
              }
            }
          }
        ]
      }
    },
    {
      "files": ["**/*.tsx"],
      "rules": {
        "react/prop-types": 0
      }
    },
    {
      "files": ["*.js", "**/*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": 0
      }
    }
  ]
}